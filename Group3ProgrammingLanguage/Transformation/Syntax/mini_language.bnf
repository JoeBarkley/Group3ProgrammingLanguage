USE_LR_PARSER

program

(* ======================================================================================================= *)
<program>		::= <stmtList>                                                                                  .
    
<stmtList>		::= <stmt> ";" <stmtList> | <epsilon>                                                           .

<stmt>			::= <assignStmt> | <decStmt> | <condStmt> | <iterStmt> | <printStmt> | <decoratedId> | <block>  .

<block>			::= "{"<stmtList>"}"                                                                            .

<assignStmt> 		::= identifier "=" <expression> 
                          | "int" identifier "=" <expression> 
                          | "bool" identifier "=" <expression>                                                          .

<decStmt>		::= "int" identifier | "bool" identifier    .

<condStmt>		::= "if" "("<expression>")" <block> 
                          | "if" "("<expression>")" <block> "else" <block>                                              .

<iterStmt>		::= <whileLoop> | <forLoop>                                                                     .

<whileLoop>		::= "while" "("<expression>")" <block>                                                          .

<forLoop>		::= "for" "("<assignStmt> ";" <termination> ";" <decoratedId>")" <block>                        .

<termination>	 	::= <expression>                                                                                .

<printStmt>		::= "print" "("<expression>")" | "print" "("                                                    .

<decoratedId>		::= identifier "++"
			  | identifier "--" 
			  | "++" identifier
			  | "--" identifier                                                                             .

<expression> 		::= <logicalExp>         .

<logicalExp>            ::= <logicalExp> "or" <logicalTerm>
                          | <logicalTerm>                                                                               .

<logicalTerm> 		::= <logicalTerm> "and" <relationalExp>
                          | <relationalExp>                                                                             .

<relationalExp> 	::= <relationalExp> "==" <arithmeticExp>
                          | <relationalExp> "!=" <arithmeticExp>
                          | <relationalExp> ">" <arithmeticExp>
                          | <relationalExp> "<" <arithmeticExp>
                          | <relationalExp> "<=" <arithmeticExp>
                          | <relationalExp> ">=" <arithmeticExp>
                          | <arithmeticExp>                                                                             .

<arithmeticExp>         ::= <arithmeticExp> "+" <arithmeticTerm>
                          | <arithmeticExp> "-" <arithmeticTerm>
                          | <arithmeticTerm>                                                                            .

<arithmeticTerm>	::= <arithmeticTerm> "*" <arithmeticEntry>
                          | <arithmeticTerm> "/" <arithmeticEntry>
                          | <arithmeticTerm> "%" <arithmeticEntry>
                          | <arithmeticEntry>                                                                           .

<arithmeticEntry>	::= "-"<exponentTerm>
                          | "not" <exponentTerm>
                          | <exponentTerm>                                                                              .

<exponentTerm>          ::= <baseTerm> "^" <exponentTerm>
                          | <baseTerm>                                                                                  .



<baseTerm>              ::= "("<expression>")"
                          | "abs""("<expression>")"
                          | integer
                          | identifier
                          | boolean
                          | <decoratedId>                                                                               .

<epsilon>               ::=                                                                                             .